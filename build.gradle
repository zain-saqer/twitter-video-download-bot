plugins {
    id 'java'
}

group 'de.saqer'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.2'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.351'
    implementation 'com.amazonaws:aws-java-sdk-sqs:1.12.351'

    implementation "com.twitter:twitter-api-java-sdk:2.0.3"

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    implementation 'com.google.code.gson:gson:2.10'

    implementation 'com.github.scribejava:scribejava-apis:8.3.3'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-lambda-java-tests
    testImplementation group: 'com.amazonaws', name: 'aws-lambda-java-tests', version: '1.1.1'

    implementation 'org.mockito:mockito-core:4.9.0'
}

test {
    useJUnitPlatform()
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}

build.dependsOn buildZip

task buildFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'de.saqer.twittervideodownloadbot.stream.Main'
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}